{"version":3,"sources":["data/Board.ts","data/Languages.ts","contexts/Language.tsx","data/SomeBoards.ts","components/game/BoardHolder.tsx","components/Header.tsx","components/Footer.tsx","components/settings/LanguagePicker.tsx","components/MainMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["genRange","getColumn","getSquare","toTiles","board","map","row","number","numbers","disabled","EMPTY_BOARD","n","i","nums","Set","NUMBERS","Array","from","f","j","col","hasAllNums","xs","foundNums","_","clone","x","delete","size","dictionaries","en","no","languageNames","LanguageContext","createContext","language","dictionary","languageChange","id","LanguageProvider","children","useState","setLanguage","provider","newLanguage","localStorage","setItem","Provider","value","solvedBoard","unsolvedBoard","wrongBoard","cloneDeep","puzzles","Modal","setAppElement","modalStyle","content","minWidth","width","height","textAlign","top","left","transform","rowBorder","N","colBorder","Cell","inside","tile","onClick","selected","length","className","BoardHolder","useParams","modalIsOpen","setModalIsOpen","message","setMessage","isError","setIsError","originalBoard","setOriginalBoard","setBoard","selectedTile","setSelectedTile","useContext","useEffect","sample","handleKeys","onKeyEvent","key","toggleNumber","parseInt","checkBoard","cell","isSelected","num","includes","to","goBack","checkBoardButton","isOpen","style","newBoard","filter","y","openModal","error","tiles","reduce","acc","isFilled","notFilledMessage","isSolved","lossMessage","winMessage","Header","description","Footer","LanguagePicker","defaultLang","getItem","window","navigator","substr","MainMenu","difficultyEasy","difficultyMedium","difficultyHard","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afe98cca.chunk.js","sourcesContent":["import _ from 'lodash';\n\nexport type Board = number[][];\n\nexport type Tile = {\n    numbers: number[];\n    disabled: boolean;\n};\n\nexport type TileBoard = Tile[][];\n\nexport function fromTiles(tiles: TileBoard): Board {\n    return tiles.map((row) =>\n        row.map((tile) => (tile.numbers.length === 1 ? tile.numbers[0] : 0))\n    );\n}\n\nexport function toTiles(board: Board): TileBoard {\n    return board.map((row) =>\n        row.map((number) => ({\n            numbers: number !== 0 ? [number] : [],\n            disabled: number !== 0,\n        }))\n    );\n}\n\nexport const isFilled = (board: TileBoard) =>\n    board.reduce(\n        (acc, row) =>\n            acc &&\n            row.reduce((acc, tile) => acc && tile.numbers.length === 1, true),\n        true\n    );\n\nexport const EMPTY_BOARD: Board = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\nexport const N = 9; // must be divisible by three\nexport const M = 3; // the box sizes\n\nfunction* genRange(n: number) {\n    for (let i = 1; i <= n; i++) yield i;\n}\n\nconst nums = new Set(genRange(N));\n\nexport const NUMBERS = Array.from(genRange(N));\n\n/**\n * Get the numbers in column\n * @param i column index, from 0..M-1\n * @param board board to fetch from\n */\nexport function* getColumn(i: number, board: Board) {\n    for (const row of board) yield row[i];\n}\n\n/**\n * Get the numbers in a MxM square\n * @param i column index, from 0..M-1\n * @param j row index, from 0..M-1\n * @param board board to fetch from\n */\nexport function* getSquare(i: number, j: number, board: Board) {\n    for (let row = i * M; row < (i + 1) * M; row++) {\n        for (let col = j * M; col < (j + 1) * M; col++) {\n            yield board[row][col];\n        }\n    }\n}\n\n/**\n * Get all nonzero (that is, preset) values in a sudoku board\n * @param board the puzzle to fetch from\n * @return string with \"i j\" pair of coordinates\n *         (for use as a Set key)\n */\nexport function* getNonzero(board: Board) {\n    for (let i = 0; i < N; i++)\n        for (let j = 0; j < N; j++) if (board[i][j] !== 0) yield `${i} ${j}`;\n}\n\n/**\n * Check if all numbers from 1 to N are present in xs\n * @param xs numbers from a column/row/square\n */\nexport function hasAllNums(xs: number[]) {\n    const foundNums = _.clone(nums);\n    for (const x of xs) foundNums.delete(x);\n    return foundNums.size === 0;\n}\n\nexport function isSolved(board: Board) {\n    // Rows\n    for (const row of board) {\n        // If there IS a difference, it is not solved\n        // (there are either zeroes or duplicates)\n        if (!hasAllNums(row)) return false;\n    }\n\n    // Columns\n    for (let i = 0; i < N; i++) {\n        // Again, check for a difference\n        if (!hasAllNums(Array.from(getColumn(i, board)))) return false;\n    }\n\n    // Squares\n    for (let i = 0; i < N / 3; i++) {\n        for (let j = 0; j < N / 3; j++) {\n            if (!hasAllNums(Array.from(getSquare(i, j, board)))) return false;\n        }\n    }\n    return true;\n}\n","import en from '../languages/english.json';\nimport no from '../languages/norwegian.json';\n\ntype Language = Record<string, string>\n\nexport const dictionaries: Record<string, Language> = { 'en': {...en}, 'no': {...no} };\n\nexport const languageNames = {\n    en: 'English',\n    no: 'Norsk'\n};","import React, { createContext, PropsWithChildren, useState } from 'react';\nimport { dictionaries, languageNames } from '../data/Languages';\n\n\nexport const LanguageContext = createContext({\n    language: 'en',\n    dictionary: dictionaries.en,\n    languageChange: (id: string) => { return; } // TODO: what is the common way to do this?\n});\n\nexport function LanguageProvider({ children }: PropsWithChildren<{}>) {\n    const [language, setLanguage] = useState('en');\n\n    const provider = {\n        language,\n        dictionary: dictionaries[language],\n        languageChange: (id: string) => {\n            const newLanguage = id in languageNames ? id : 'en';\n            setLanguage(newLanguage);\n            localStorage.setItem('language', newLanguage);\n        }\n    };\n\n    return (\n        <LanguageContext.Provider value={provider}>\n            {children}\n        </LanguageContext.Provider>\n    )\n}","/**\n * Boards from\n * https://dingo.sbs.arizona.edu/~sandiway/sudoku/examples.html\n */\nimport { Board } from './Board';\nimport _ from 'lodash';\n\nexport const solvedBoard = [\n    [4,3,5,2,6,9,7,8,1],\n    [6,8,2,5,7,1,4,9,3],\n    [1,9,7,8,3,4,5,6,2],\n    [8,2,6,1,9,5,3,4,7],\n    [3,7,4,6,8,2,9,1,5],\n    [9,5,1,7,4,3,6,2,8],\n    [5,1,9,3,2,6,8,7,4],\n    [2,4,8,9,5,7,1,3,6],\n    [7,6,3,4,1,8,2,5,9]\n];\n\n/**\n * Easiest no. 1, unsolved.\n */\nexport const unsolvedBoard = [\n    [0,0,0,2,6,0,7,0,1],\n    [6,8,0,0,7,0,0,9,0],\n    [1,9,0,0,0,4,5,0,0],\n    [8,2,0,1,0,0,0,4,0],\n    [0,0,4,6,0,2,9,0,0],\n    [0,5,0,0,0,3,0,2,8],\n    [0,0,9,3,0,0,0,7,4],\n    [0,4,0,0,5,0,0,3,6],\n    [7,0,3,0,1,8,0,0,0]\n];\n\n/**\n * Easy no. 2, unsolved.\n */\nconst easy2 = [\n    [1, 0, 0, 4, 8, 9, 0, 0, 6],\n    [7, 3, 0, 0, 0, 0, 0, 4, 0],\n    [0, 0, 0, 0, 0, 1, 2, 9, 5],\n\n    [0, 0, 7, 1, 2, 0, 6, 0, 0],\n    [5, 0, 0, 7, 0, 3, 0, 0, 8],\n    [0, 0, 6, 0, 9, 5, 7, 0, 0],\n\n    [9, 1, 4, 6, 0, 0, 0, 0, 0],\n    [0, 2, 0, 0, 0, 0, 0, 3, 7],\n    [8, 0, 0, 5, 1, 2, 0, 0, 4]\n];\n\n\n/**\n * Medium no. 1, unsolved.\n */\nconst medium1 = [\n    [0, 2, 0, 6, 0, 8, 0, 0, 0],\n    [5, 8, 0, 0, 0, 9, 7, 0, 0],\n    [0, 0, 0, 0, 4, 0, 0, 0, 0],\n\n    [3, 7, 0, 0, 0, 0, 5, 0, 0],\n    [6, 0, 0, 0, 0, 0, 0, 0, 4],\n    [0, 0, 8, 0, 0, 0, 0, 1, 3],\n\n    [0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [0, 0, 9, 8, 0, 0, 0, 3, 6],\n    [0, 0, 0, 3, 0, 6, 0, 9, 0]\n];\n\n/**\n * Hard no. 1, unsolved.\n */\nconst hard1 = [\n    [0, 0, 0, 6, 0, 0, 4, 0, 0],\n    [7, 0, 0, 0, 0, 3, 6, 0, 0],\n    [0, 0, 0, 0, 9, 1, 0, 8, 0],\n\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 5, 0, 1, 8, 0, 0, 0, 3],\n    [0, 0, 0, 3, 0, 6, 0, 4, 5],\n\n    [0, 4, 0, 2, 0, 0, 0, 6, 0],\n    [9, 0, 3, 0, 0, 0, 0, 0, 0],\n    [0, 2, 0, 0, 0, 0, 1, 0, 0]\n];\n\n/**\n * Hard no. 2, unsolved.\n */\nconst hard2 = [\n    [2, 0, 0, 3, 0, 0, 0, 0, 0],\n    [8, 0, 4, 0, 6, 2, 0, 0, 3],\n    [0, 1, 3, 8, 0, 0, 2, 0, 0],\n\n    [0, 0, 0, 0, 2, 0, 3, 9, 0],\n    [5, 0, 7, 0, 0, 0, 6, 2, 1],\n    [0, 3, 2, 0, 0, 6, 0, 0, 0],\n\n    [0, 2, 0, 0, 0, 9, 1, 4, 0],\n    [6, 0, 1, 2, 5, 0, 8, 0, 9],\n    [0, 0, 0, 0, 0, 1, 0, 0, 2]\n];\n\nconst wrongBoard = _.cloneDeep(solvedBoard);\nwrongBoard[2][3] = 1;\n\nexport const puzzles: Record<string, Board[]> = {\n    'easy': [\n        unsolvedBoard,\n        easy2\n    ],\n    'medium': [\n        medium1,\n    ],\n    'hard': [\n        hard1,\n        hard2\n    ],\n    'cheat': [\n        solvedBoard\n    ],\n    'wrong': [\n        wrongBoard\n    ]\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    N,\n    M,\n    isSolved,\n    EMPTY_BOARD,\n    Tile,\n    toTiles,\n    fromTiles,\n    NUMBERS,\n    isFilled,\n} from '../../data/Board';\nimport './BoardHolder.css';\nimport _ from 'lodash';\nimport { LanguageContext } from '../../contexts/Language';\nimport { Link, useParams } from 'react-router-dom';\nimport { puzzles, unsolvedBoard } from '../../data/SomeBoards';\nimport Modal, { Styles } from 'react-modal';\n// @ts-ignore\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\n// THIS is important\nModal.setAppElement('#root');\n\nconst modalStyle: Styles = {\n    content: {\n        minWidth: '15em',\n        width: '30em',\n        height: '10em',\n        textAlign: 'center',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\n// Setting class name...\nfunction rowBorder(i: number) {\n    return (\n        (i % M === 2 && i < N - 1 ? 'border-bottom' : '') ||\n        (i % M === 0 && i > 0 ? 'border-top' : '')\n    );\n}\n\n// Setting class name...\nfunction colBorder(j: number) {\n    return (\n        (j % M === 2 && j < N - 1 ? 'border-right' : '') ||\n        (j % M === 0 && j > 0 ? 'border-left' : '')\n    );\n}\n\nfunction Cell({\n    tile,\n    onClick,\n    selected,\n}: {\n    tile: Tile;\n    onClick: () => void;\n    selected: boolean;\n}) {\n    const { numbers } = tile;\n    let inside;\n    if (numbers.length > 4) {\n        inside = (\n            <div className=\"cell-grid-tiny\">\n                {tile.numbers.map((x) => (\n                    <div key={x} className=\"cell-num-tiny\">{x}</div>\n                ))}\n            </div>\n        );\n    } else if (numbers.length > 1) {\n        inside = (\n            <div className=\"cell-grid-small\">\n                {tile.numbers.map((x) => (\n                    <div key={x} className=\"cell-num-small\">{x}</div>\n                ))}\n            </div>\n        );\n    } else if (numbers.length > 0) {\n        inside = numbers[0];\n    } else {\n        inside = '';\n    }\n    return (\n        <button\n            className={`cell-btn ${selected ? 'active' : ''}`}\n            onClick={onClick}\n            disabled={tile.disabled}\n        >\n            {inside}\n        </button>\n    );\n}\n\nexport default function BoardHolder() {\n    const { id } = useParams<{ id: string }>();\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isError, setIsError] = useState(false);\n\n    const [originalBoard, setOriginalBoard] = useState(EMPTY_BOARD); // set in useEffect\n    const [board, setBoard] = useState(toTiles(EMPTY_BOARD)); // set in useEffect\n    const [selectedTile, setSelectedTile] = useState<[number, number] | null>(\n        null\n    );\n    const { dictionary } = useContext(LanguageContext);\n\n    useEffect(() => {\n        // Fetch the board by id\n        if (puzzles[id])\n            // Pick a random board of that difficulty/whatever\n            setOriginalBoard(_.sample(puzzles[id]) || unsolvedBoard);\n        else setOriginalBoard(unsolvedBoard);\n    }, [id]);\n\n    useEffect(() => {\n        // Make sure to reset the board when anything has changed\n        setBoard(toTiles(originalBoard));\n    }, [originalBoard]);\n\n    return (\n        <KeyboardEventHandler\n            handleKeys={['enter', '1', '2', '3', '4', '5', '6', '7', '8', '9']}\n            onKeyEvent={handleKeyPress}\n        >\n            <table>\n                <tbody>\n                    {board.map((row, i) => (\n                        <tr key={i} className={rowBorder(i)}>\n                            {row.map((cell, j) => (\n                                <td key={j} className={colBorder(j)}>\n                                    <Cell\n                                        tile={cell}\n                                        onClick={() => setSelectedTile([i, j])}\n                                        selected={isSelected(i, j)}\n                                    />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <p>\n                {NUMBERS.map((num: number) => {\n                    if (selectedTile) {\n                        const tile = board[selectedTile[0]][selectedTile[1]];\n                        return (\n                            <button\n                                className={`cell-btn ${\n                                    tile.numbers.includes(num) ? ' active' : ''\n                                }`}\n                                onClick={() => toggleNumber(num)}\n                                key={num}\n                            >\n                                {num}\n                            </button>\n                        );\n                    } else {\n                        return (\n                            <button key={num} className=\"cell-btn\" disabled>\n                                {num}\n                            </button>\n                        );\n                    }\n                })}\n            </p>\n            <p>teeeeest</p>\n            <p>\n                <Link to=\"/\">\n                    <button>{dictionary.goBack}</button>\n                </Link>\n                <button onClick={checkBoard}>\n                    {dictionary.checkBoardButton}\n                </button>\n            </p>\n            <Modal isOpen={modalIsOpen} style={modalStyle}>\n                <p className={`message ${isError ? ' error' : ''}`}>\n                    {message}\n                </p>\n                <p>\n                    <button onClick={() => setModalIsOpen(false)}>Ok</button>\n                </p>\n            </Modal>\n        </KeyboardEventHandler>\n    );\n\n    function handleKeyPress(key: string) {\n        if (key === 'enter' && !modalIsOpen) {\n            // No shortcut for closing the modal yet\n            // (the key handler does not work when the modal is open)\n            checkBoard();\n        } else {\n            toggleNumber(parseInt(key));\n        }\n    }\n\n    function toggleNumber(x: number) {\n        if (!selectedTile) return;\n        const [i, j] = selectedTile;\n        const { numbers } = board[i][j];\n        const newBoard = _.clone(board);\n        if (numbers.includes(x)) {\n            newBoard[i][j].numbers = NUMBERS.filter(\n                (y) => numbers.includes(y) && y !== x\n            );\n        } else {\n            newBoard[i][j].numbers = NUMBERS.filter(\n                (y) => numbers.includes(y) || y === x\n            );\n        }\n        setBoard(newBoard);\n    }\n\n    function isSelected(i: number, j: number) {\n        return (\n            selectedTile !== null &&\n            selectedTile[0] === i &&\n            selectedTile[1] === j\n        );\n    }\n\n    function openModal(message: string, error = true) {\n        setMessage(message);\n        setIsError(error);\n        setModalIsOpen(true);\n    }\n\n    function checkBoard() {\n        if (!isFilled(board)) {\n            openModal(dictionary.notFilledMessage);\n        } else if (isSolved(fromTiles(board))) {\n            openModal(dictionary.winMessage, false);\n        } else {\n            openModal(dictionary.lossMessage);\n        }\n    }\n}\n","import React, { useContext } from 'react';\nimport { LanguageContext } from '../contexts/Language';\n\nexport default function Header() {\n    const { dictionary } = useContext(LanguageContext);\n\n    return (\n        <header>\n            <h1>dosuku</h1>\n            {/*TODO: random permutation of su,do,ku*/}\n            <h2>{dictionary.description}</h2>\n        </header>\n    );\n}","import React from 'react';\n\nexport default function Footer() {\n\n    return (\n        <footer>\n            <p>sudoku kudosu sukudo</p>\n            <p>sudoku dokusu kusudo</p>\n            <p>kudosu dosuku sukudo</p>\n        </footer>\n    );\n}","import React, { useContext, useEffect } from 'react';\nimport { LanguageContext } from '../../contexts/Language';\nimport { languageNames } from '../../data/Languages';\n\nexport default function LanguagePicker() {\n    const { language, languageChange } = useContext(LanguageContext);\n\n    useEffect(() => {\n        let defaultLang = localStorage.getItem('language');\n        if (!defaultLang) defaultLang = window.navigator.language.substr(0,2);\n        languageChange(defaultLang);\n    }, [languageChange]);\n\n    return (\n        <>\n            <button onClick={() => languageChange('en')}>{languageNames.en}</button>\n            <button onClick={() => languageChange('no')}>{languageNames.no}</button>\n        </>\n    )\n}","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport LanguagePicker from './settings/LanguagePicker';\nimport { LanguageContext } from '../contexts/Language';\n\nexport default function MainMenu() {\n    const { dictionary } = useContext(LanguageContext);\n\n    return (\n        <>\n            <p>\n                <Link to=\"/board/easy\">\n                    <button className=\"btn-wide\">{dictionary.difficultyEasy}</button>\n                </Link>\n            </p>\n            <p>\n                <Link to=\"/board/medium\">\n                    <button className=\"btn-wide\">{dictionary.difficultyMedium}</button>\n                </Link>\n            </p>\n            <p>\n                <Link to=\"/board/hard\">\n                    <button className=\"btn-wide\">{dictionary.difficultyHard}</button>\n                </Link>\n            </p>\n            <p>\n                <LanguagePicker />\n            </p>\n        </>\n    );\n}\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport BoardHolder from './components/game/BoardHolder';\nimport { LanguageProvider } from './contexts/Language';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport MainMenu from './components/MainMenu';\n\nfunction App() {\n    return (\n        <Router>\n            <LanguageProvider>\n                <div className=\"App\">\n                    <Header />\n                    <main>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <MainMenu/>\n                            </Route>\n                            <Route path=\"/board/:id\">\n                                <BoardHolder />\n                            </Route>\n                            <Route>\n                                <h2>404 Not Found</h2>\n                            </Route>\n                        </Switch>\n                    </main>\n                    <Footer />\n                </div>\n            </LanguageProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './globals.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}