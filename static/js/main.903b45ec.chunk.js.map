{"version":3,"sources":["data/Board.ts","data/Languages.ts","contexts/Language.tsx","data/SomeBoards.ts","contexts/Settings.tsx","components/game/BoardHolder.tsx","components/Header.tsx","components/Footer.tsx","components/settings/LanguagePicker.tsx","components/MainMenu.tsx","components/settings/SettingsMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["genRange","getColumn","getSquare","fromTiles","tiles","map","row","tile","numbers","length","toTiles","board","number","disabled","wrong","EMPTY_BOARD","n","i","nums","Set","NUMBERS","Array","from","f","j","col","hasAllNums","xs","foundNums","_","clone","x","delete","size","markErrors","errors","forEach","found","Map","has","set","get","push","values","filter","flat","k","Math","floor","N","findErrors","newBoard","dictionaries","en","no","languageNames","LanguageContext","createContext","language","dictionary","languageChange","id","LanguageProvider","children","useState","setLanguage","provider","newLanguage","localStorage","setItem","Provider","value","solvedBoard","unsolvedBoard","wrongBoard","cloneDeep","puzzles","HINT_ALTERNATIVES","SettingsContext","hints","setHints","SettingsProvider","useEffect","oldHintLevel","getItem","includes","Modal","setAppElement","modalStyle","content","minWidth","width","height","textAlign","top","left","transform","rowBorder","Cell","inside","onClick","selected","className","BoardHolder","useParams","modalIsOpen","setModalIsOpen","message","setMessage","isError","setIsError","originalBoard","setOriginalBoard","setBoard","selectedTile","setSelectedTile","selectedRow","selectedCol","useContext","sample","handleKeys","onKeyEvent","key","toggleNumber","parseInt","checkBoard","cell","cellClass","isSelected","num","to","goBack","checkBoardButton","isOpen","style","result","colBorder","y","openModal","error","reduce","acc","isFilled","notFilledMessage","isSolved","lossMessage","winMessage","Header","description","Footer","LanguagePicker","defaultLang","window","navigator","substr","MainMenu","difficultyEasy","difficultyMedium","difficultyHard","settings","SettingsMenu","hintsLabel","h","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAgDzB,KAAQ,CA1CE,CACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMf,CACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,CAAC,EAAG,EA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","file":"static/js/main.903b45ec.chunk.js","sourcesContent":["import _ from 'lodash';\n\nexport type Board = number[][];\n\nexport type Tile = {\n    numbers: number[];\n    disabled: boolean;\n    wrong: boolean;\n};\n\nexport type TileBoard = Tile[][];\n\nexport function fromTiles(tiles: TileBoard): Board {\n    return tiles.map((row) =>\n        row.map((tile) => (tile.numbers.length === 1 ? tile.numbers[0] : 0))\n    );\n}\n\nexport function toTiles(board: Board): TileBoard {\n    return board.map((row) =>\n        row.map((number) => ({\n            numbers: number !== 0 ? [number] : [],\n            disabled: number !== 0,\n            wrong: false\n        }))\n    );\n}\n\nexport const isFilled = (board: TileBoard) =>\n    board.reduce(\n        (acc, row) =>\n            acc &&\n            row.reduce((acc, tile) => acc && tile.numbers.length === 1, true),\n        true\n    );\n\nexport const EMPTY_BOARD: Board = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\nexport const N = 9; // must be divisible by three\nexport const M = 3; // the box sizes\n\nfunction* genRange(n: number) {\n    for (let i = 1; i <= n; i++) yield i;\n}\n\nconst nums = new Set(genRange(N));\n\nexport const NUMBERS = Array.from(genRange(N));\n\n/**\n * Get the numbers in column\n * @param i column index, from 0..M-1\n * @param board board to fetch from\n */\nexport function* getColumn(i: number, board: Board) {\n    for (const row of board) yield row[i];\n}\n\n/**\n * Get the numbers in a MxM square\n * @param i column index, from 0..M-1\n * @param j row index, from 0..M-1\n * @param board board to fetch from\n */\nexport function* getSquare(i: number, j: number, board: Board) {\n    for (let row = i * M; row < (i + 1) * M; row++) {\n        for (let col = j * M; col < (j + 1) * M; col++) {\n            yield board[row][col];\n        }\n    }\n}\n\n/**\n * Get all nonzero (that is, preset) values in a sudoku board\n * @param board the puzzle to fetch from\n * @return string with \"i j\" pair of coordinates\n *         (for use as a Set key)\n */\nexport function* getNonzero(board: Board) {\n    for (let i = 0; i < N; i++)\n        for (let j = 0; j < N; j++) if (board[i][j] !== 0) yield `${i} ${j}`;\n}\n\n/**\n * Check if all numbers from 1 to N are present in xs\n * @param xs numbers from a column/row/square\n */\nexport function hasAllNums(xs: number[]) {\n    const foundNums = _.clone(nums);\n    for (const x of xs) foundNums.delete(x);\n    return foundNums.size === 0;\n}\n\nexport function isSolved(board: Board) {\n    // Rows\n    for (const row of board) {\n        // If there IS a difference, it is not solved\n        // (there are either zeroes or duplicates)\n        if (!hasAllNums(row)) return false;\n    }\n\n    // Columns\n    for (let i = 0; i < N; i++) {\n        // Again, check for a difference\n        if (!hasAllNums(Array.from(getColumn(i, board)))) return false;\n    }\n\n    // Squares\n    for (let i = 0; i < N / 3; i++) {\n        for (let j = 0; j < N / 3; j++) {\n            if (!hasAllNums(Array.from(getSquare(i, j, board)))) return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Finds errors (duplicate numbers in col/row/square)\n * and reports their positions.\n *\n * @param board Board to inspect\n * @return Positions of errors\n */\nexport function findErrors(board: Board): [number, number][] {\n    const errors: [number, number][] = [];\n    // TODO: CLEAN THIS MESS UP!\n    //       Yes, it *is* fast enough, but it is way more verbose than it needs to be\n    //       - and creating a set of positions is not necessary for marking them!\n\n    // Rows\n    board.forEach((row, i) => {\n        const found: Map<number, [number, number][]> = new Map<number, [number, number][]>();\n        row.forEach((x, j) => {\n            if (x === 0) return;\n            if (!found.has(x)) {\n                found.set(x, []);\n            }\n            // @ts-ignore\n            found.get(x).push([i, j])\n        })\n        errors.push(...Array.from(found.values()).filter((xs) => xs.length > 1).flat());\n    })\n\n    // Columns\n    board.forEach((_, j) => {\n        const found: Map<number, [number, number][]> = new Map<number, [number, number][]>();\n        Array.from(getColumn(j, board)).forEach((x, i) => {\n            if (x === 0) return;\n            if (!found.has(x)) {\n                found.set(x, []);\n            }\n            // @ts-ignore\n            found.get(x).push([i, j])\n        })\n        errors.push(...Array.from(found.values()).filter((xs) => xs.length > 1).flat());\n    })\n\n    // Boxes\n    for (let i = 0; i < N / 3; i++) {\n        for (let j = 0; j < N / 3; j++) {\n            const found: Map<number, [number, number][]> = new Map<number, [number, number][]>();\n            Array.from(getSquare(i, j, board)).forEach((x, k) => {\n                if (x === 0) return;\n                if (!found.has(x)) {\n                    found.set(x, []);\n                }\n                // @ts-ignore\n                found.get(x).push([i*M+(Math.floor(k/M)), j*M+(k%M)])\n            })\n            errors.push(...Array.from(found.values()).filter((xs) => xs.length > 1).flat());\n        }\n    }\n\n    // filter unique...\n    return Array.from(new Set(errors).values());\n}\n\n/**\n * Marks errors (duplicates) on a TileBoard\n * (consider combining this with the findErrors function)\n *\n * @param board TileBoard to mark\n * @return New board with errors properly marked\n */\nexport function markErrors(board: TileBoard) {\n    const errors = findErrors(fromTiles(board));\n    const newBoard = board.map(row => row.map(tile => ({...tile, wrong: false})));\n    errors.forEach(([i, j]) => {\n        if (!newBoard[i][j].disabled)\n            newBoard[i][j].wrong = true;\n    })\n    return newBoard;\n}\n","import en from '../languages/english.json';\nimport no from '../languages/norwegian.json';\n\ntype Language = Record<string, string>\n\nexport const dictionaries: Record<string, Language> = { 'en': {...en}, 'no': {...no} };\n\nexport const languageNames = {\n    en: 'English',\n    no: 'Norsk'\n};","import React, { createContext, PropsWithChildren, useState } from 'react';\nimport { dictionaries, languageNames } from '../data/Languages';\n\nexport const LanguageContext = createContext({\n    language: 'en',\n    dictionary: dictionaries.en,\n    languageChange: (id: string) => { return; } // TODO: what is the common way to do this?\n});\n\nexport function LanguageProvider({ children }: PropsWithChildren<{}>) {\n    const [language, setLanguage] = useState('en');\n\n    const provider = {\n        language,\n        dictionary: dictionaries[language],\n        languageChange: (id: string) => {\n            const newLanguage = id in languageNames ? id : 'en';\n            setLanguage(newLanguage);\n            localStorage.setItem('language', newLanguage);\n        }\n    };\n\n    return (\n        <LanguageContext.Provider value={provider}>\n            {children}\n        </LanguageContext.Provider>\n    )\n}\n","/**\n * Boards from\n * https://dingo.sbs.arizona.edu/~sandiway/sudoku/examples.html\n */\nimport { Board } from './Board';\nimport _ from 'lodash';\n\nexport const solvedBoard = [\n    [4,3,5,2,6,9,7,8,1],\n    [6,8,2,5,7,1,4,9,3],\n    [1,9,7,8,3,4,5,6,2],\n    [8,2,6,1,9,5,3,4,7],\n    [3,7,4,6,8,2,9,1,5],\n    [9,5,1,7,4,3,6,2,8],\n    [5,1,9,3,2,6,8,7,4],\n    [2,4,8,9,5,7,1,3,6],\n    [7,6,3,4,1,8,2,5,9]\n];\n\n/**\n * Easiest no. 1, unsolved.\n */\nexport const unsolvedBoard = [\n    [0,0,0,2,6,0,7,0,1],\n    [6,8,0,0,7,0,0,9,0],\n    [1,9,0,0,0,4,5,0,0],\n    [8,2,0,1,0,0,0,4,0],\n    [0,0,4,6,0,2,9,0,0],\n    [0,5,0,0,0,3,0,2,8],\n    [0,0,9,3,0,0,0,7,4],\n    [0,4,0,0,5,0,0,3,6],\n    [7,0,3,0,1,8,0,0,0]\n];\n\n/**\n * Easy no. 2, unsolved.\n */\nconst easy2 = [\n    [1, 0, 0, 4, 8, 9, 0, 0, 6],\n    [7, 3, 0, 0, 0, 0, 0, 4, 0],\n    [0, 0, 0, 0, 0, 1, 2, 9, 5],\n\n    [0, 0, 7, 1, 2, 0, 6, 0, 0],\n    [5, 0, 0, 7, 0, 3, 0, 0, 8],\n    [0, 0, 6, 0, 9, 5, 7, 0, 0],\n\n    [9, 1, 4, 6, 0, 0, 0, 0, 0],\n    [0, 2, 0, 0, 0, 0, 0, 3, 7],\n    [8, 0, 0, 5, 1, 2, 0, 0, 4]\n];\n\n\n/**\n * Medium no. 1, unsolved.\n */\nconst medium1 = [\n    [0, 2, 0, 6, 0, 8, 0, 0, 0],\n    [5, 8, 0, 0, 0, 9, 7, 0, 0],\n    [0, 0, 0, 0, 4, 0, 0, 0, 0],\n\n    [3, 7, 0, 0, 0, 0, 5, 0, 0],\n    [6, 0, 0, 0, 0, 0, 0, 0, 4],\n    [0, 0, 8, 0, 0, 0, 0, 1, 3],\n\n    [0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [0, 0, 9, 8, 0, 0, 0, 3, 6],\n    [0, 0, 0, 3, 0, 6, 0, 9, 0]\n];\n\n/**\n * Hard no. 1, unsolved.\n */\nconst hard1 = [\n    [0, 0, 0, 6, 0, 0, 4, 0, 0],\n    [7, 0, 0, 0, 0, 3, 6, 0, 0],\n    [0, 0, 0, 0, 9, 1, 0, 8, 0],\n\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 5, 0, 1, 8, 0, 0, 0, 3],\n    [0, 0, 0, 3, 0, 6, 0, 4, 5],\n\n    [0, 4, 0, 2, 0, 0, 0, 6, 0],\n    [9, 0, 3, 0, 0, 0, 0, 0, 0],\n    [0, 2, 0, 0, 0, 0, 1, 0, 0]\n];\n\n/**\n * Hard no. 2, unsolved.\n */\nconst hard2 = [\n    [2, 0, 0, 3, 0, 0, 0, 0, 0],\n    [8, 0, 4, 0, 6, 2, 0, 0, 3],\n    [0, 1, 3, 8, 0, 0, 2, 0, 0],\n\n    [0, 0, 0, 0, 2, 0, 3, 9, 0],\n    [5, 0, 7, 0, 0, 0, 6, 2, 1],\n    [0, 3, 2, 0, 0, 6, 0, 0, 0],\n\n    [0, 2, 0, 0, 0, 9, 1, 4, 0],\n    [6, 0, 1, 2, 5, 0, 8, 0, 9],\n    [0, 0, 0, 0, 0, 1, 0, 0, 2]\n];\n\nconst wrongBoard = _.cloneDeep(solvedBoard);\nwrongBoard[2][3] = 1;\n\nexport const puzzles: Record<string, Board[]> = {\n    'easy': [\n        unsolvedBoard,\n        easy2\n    ],\n    'medium': [\n        medium1,\n    ],\n    'hard': [\n        hard1,\n        hard2\n    ],\n    'cheat': [\n        solvedBoard\n    ],\n    'wrong': [\n        wrongBoard\n    ]\n}\n","import React, { createContext, PropsWithChildren, useEffect, useState } from 'react';\n\nexport type Hints = 'none' | 'on check' | 'always';\nexport const HINT_ALTERNATIVES: Hints[] = ['none', 'on check', 'always'];\n\nexport const SettingsContext = createContext<{\n    hints: Hints;\n    setHints: (h: Hints) => void;\n}>({\n    hints: 'on check',\n    setHints: () => { return; },\n})\n\nexport function SettingsProvider({ children }: PropsWithChildren<{}>) {\n    const [hints, setHints] = useState<Hints>('on check');\n\n    useEffect(() => {\n        const oldHintLevel = localStorage.getItem('hints');\n        if (oldHintLevel && HINT_ALTERNATIVES.includes(oldHintLevel as Hints))\n            setHints(oldHintLevel as Hints);\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('hints', hints);\n    }, [hints]);\n\n    const provider = {\n        hints,\n        setHints\n    };\n\n    return (\n        <SettingsContext.Provider value={provider}>\n            {children}\n        </SettingsContext.Provider>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n    N,\n    M,\n    isSolved,\n    EMPTY_BOARD,\n    Tile,\n    toTiles,\n    fromTiles,\n    NUMBERS,\n    isFilled, findErrors, TileBoard, markErrors\n} from '../../data/Board';\nimport './BoardHolder.css';\nimport _ from 'lodash';\nimport { LanguageContext } from '../../contexts/Language';\nimport { Link, useParams } from 'react-router-dom';\nimport { puzzles, unsolvedBoard } from '../../data/SomeBoards';\nimport Modal, { Styles } from 'react-modal';\n// @ts-ignore\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { SettingsContext } from '../../contexts/Settings';\n\n// THIS is important\nModal.setAppElement('#root');\n\nconst modalStyle: Styles = {\n    content: {\n        minWidth: '15em',\n        width: '30em',\n        height: '10em',\n        textAlign: 'center',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\n// Setting class name...\nfunction rowBorder(i: number) {\n    return (\n        (i % M === 2 && i < N - 1 ? 'border-bottom' : '') ||\n        (i % M === 0 && i > 0 ? 'border-top' : '')\n    );\n}\n\n// Setting class name...\nfunction colBorder(j: number) {\n    return (\n        (j % M === 2 && j < N - 1 ? 'border-right' : '') ||\n        (j % M === 0 && j > 0 ? 'border-left' : '')\n    );\n}\n\nfunction Cell({\n    tile,\n    onClick,\n    selected,\n}: {\n    tile: Tile;\n    onClick: () => void;\n    selected: boolean;\n}) {\n    const { numbers, wrong } = tile;\n    let inside;\n    if (numbers.length > 4) {\n        inside = (\n            <div className=\"cell-grid-tiny\">\n                {tile.numbers.map((x) => (\n                    <div key={x} className=\"cell-num-tiny\">\n                        {x}\n                    </div>\n                ))}\n            </div>\n        );\n    } else if (numbers.length > 1) {\n        inside = (\n            <div className=\"cell-grid-small\">\n                {tile.numbers.map((x) => (\n                    <div key={x} className=\"cell-num-small\">\n                        {x}\n                    </div>\n                ))}\n            </div>\n        );\n    } else if (numbers.length > 0) {\n        inside = numbers[0];\n    } else {\n        inside = '';\n    }\n    return (\n        <button\n            className={`cell-btn ${selected ? 'active' : ''} ${wrong ? 'wrong' : ''}`}\n            onClick={onClick}\n            disabled={tile.disabled}\n        >\n            {inside}\n        </button>\n    );\n}\n\nexport default function BoardHolder() {\n    const { id } = useParams<{ id: string }>();\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isError, setIsError] = useState(false);\n\n    const [originalBoard, setOriginalBoard] = useState(EMPTY_BOARD); // set in useEffect\n    const [board, setBoard] = useState(toTiles(EMPTY_BOARD)); // set in useEffect\n    const [selectedTile, setSelectedTile] = useState<[number, number]>([\n        -1,\n        -1,\n    ]);\n    const [selectedRow, selectedCol] = selectedTile;\n\n    const { dictionary } = useContext(LanguageContext);\n    const { hints } = useContext(SettingsContext);\n\n    useEffect(() => {\n        // Fetch the board by id\n        if (puzzles[id])\n            // Pick a random board of that difficulty/whatever\n            setOriginalBoard(_.sample(puzzles[id]) || unsolvedBoard);\n        else setOriginalBoard(unsolvedBoard);\n    }, [id]);\n\n    useEffect(() => {\n        // Make sure to reset the board when anything has changed\n        setBoard(toTiles(originalBoard));\n    }, [originalBoard]);\n\n    return (\n        <KeyboardEventHandler\n            handleKeys={['enter', '1', '2', '3', '4', '5', '6', '7', '8', '9']}\n            onKeyEvent={handleKeyPress}\n        >\n            <table>\n                <tbody>\n                    {board.map((row, i) => (\n                        <tr key={i} className={rowBorder(i)}>\n                            {row.map((cell, j) => (\n                                <td key={j} className={cellClass(i, j)}>\n                                    <Cell\n                                        tile={cell}\n                                        onClick={() => setSelectedTile([i, j])}\n                                        selected={isSelected(i, j)}\n                                    />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <p>\n                {NUMBERS.map((num: number) => {\n                    if (selectedCol >= 0 && selectedRow >= 0) {\n                        const tile = board[selectedRow][selectedCol];\n                        return (\n                            <button\n                                className={`cell-btn ${\n                                    tile.numbers.includes(num) ? ' active' : ''\n                                }`}\n                                onClick={() => toggleNumber(num)}\n                                key={num}\n                            >\n                                {num}\n                            </button>\n                        );\n                    } else {\n                        return (\n                            <button key={num} className=\"cell-btn\" disabled>\n                                {num}\n                            </button>\n                        );\n                    }\n                })}\n            </p>\n            <p>\n                <Link to=\"/\">\n                    <button>{dictionary.goBack}</button>\n                </Link>\n                <button onClick={checkBoard}>\n                    {dictionary.checkBoardButton}\n                </button>\n            </p>\n            <Modal isOpen={modalIsOpen} style={modalStyle}>\n                <p className={`message ${isError ? ' error' : ''}`}>\n                    {message}\n                </p>\n                <p>\n                    <button onClick={() => setModalIsOpen(false)}>Ok</button>\n                </p>\n            </Modal>\n        </KeyboardEventHandler>\n    );\n\n    function cellClass(i: number, j: number) {\n        let result = '';\n        if (\n            selectedRow === i ||\n            selectedCol === j ||\n            (Math.floor(selectedRow / M) === Math.floor(i / M) &&\n                Math.floor(selectedCol / M) === Math.floor(j / M))\n        ) {\n            result = ' selected-area';\n        }\n        return colBorder(j) + result;\n    }\n\n    function handleKeyPress(key: string) {\n        if (key === 'enter' && !modalIsOpen) {\n            // No shortcut for closing the modal yet\n            // (the key handler does not work when the modal is open)\n            checkBoard();\n        } else {\n            toggleNumber(parseInt(key));\n        }\n    }\n\n    function toggleNumber(x: number) {\n        if (selectedRow === -1 || selectedCol === -1) return;\n        const [i, j] = selectedTile;\n        const { numbers } = board[i][j];\n        const newBoard = _.clone(board);\n\n        if (numbers.includes(x)) {\n            newBoard[i][j].numbers = NUMBERS.filter(\n                (y) => numbers.includes(y) && y !== x\n            );\n        } else {\n            newBoard[i][j].numbers = NUMBERS.filter(\n                (y) => numbers.includes(y) || y === x\n            );\n        }\n\n        if (hints === \"always\") {\n            // otherwise, continuously mark errors\n            setBoard(markErrors(newBoard));\n        } else {\n            // if error marking only happens on check,\n            // don't indicate failure when changed\n            newBoard[i][j].wrong = false;\n            setBoard(newBoard);\n        }\n    }\n\n    function isSelected(i: number, j: number) {\n        return selectedRow === i && selectedCol === j;\n    }\n\n    function openModal(message: string, error = true) {\n        setMessage(message);\n        setIsError(error);\n        setModalIsOpen(true);\n    }\n\n    function checkBoard() {\n        if (!isFilled(board)) {\n            openModal(dictionary.notFilledMessage);\n        } else if (isSolved(fromTiles(board))) {\n            openModal(dictionary.winMessage, false);\n        } else {\n            openModal(dictionary.lossMessage);\n        }\n        // if error marking only happens on check\n        if (isError && hints === 'on check')\n            setBoard(markErrors(board));\n    }\n}\n","import React, { useContext } from 'react';\nimport { LanguageContext } from '../contexts/Language';\n\nexport default function Header() {\n    const { dictionary } = useContext(LanguageContext);\n\n    return (\n        <header>\n            <h1>dosuku</h1>\n            {/*TODO: random permutation of su,do,ku*/}\n            <h2>{dictionary.description}</h2>\n        </header>\n    );\n}","import React from 'react';\n\nexport default function Footer() {\n\n    return (\n        <footer>\n            <p>sudoku kudosu sukudo</p>\n            <p>sudoku dokusu kusudo</p>\n            <p>kudosu dosuku sukudo</p>\n        </footer>\n    );\n}","import React, { useContext, useEffect } from 'react';\nimport { LanguageContext } from '../../contexts/Language';\nimport { languageNames } from '../../data/Languages';\n\nexport default function LanguagePicker() {\n    const { language, languageChange } = useContext(LanguageContext);\n\n    useEffect(() => {\n        let defaultLang = localStorage.getItem('language');\n        if (!defaultLang) defaultLang = window.navigator.language.substr(0,2);\n        languageChange(defaultLang);\n    }, [languageChange]);\n\n    return (\n        <>\n            <button onClick={() => languageChange('en')}>{languageNames.en}</button>\n            <button onClick={() => languageChange('no')}>{languageNames.no}</button>\n        </>\n    )\n}","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport LanguagePicker from './settings/LanguagePicker';\nimport { LanguageContext } from '../contexts/Language';\n\nexport default function MainMenu() {\n    const { dictionary } = useContext(LanguageContext);\n\n    return (\n        <>\n            <p>\n                <Link to=\"/board/easy\">\n                    <button className=\"btn-wide\">{dictionary.difficultyEasy}</button>\n                </Link>\n            </p>\n            <p>\n                <Link to=\"/board/medium\">\n                    <button className=\"btn-wide\">{dictionary.difficultyMedium}</button>\n                </Link>\n            </p>\n            <p>\n                <Link to=\"/board/hard\">\n                    <button className=\"btn-wide\">{dictionary.difficultyHard}</button>\n                </Link>\n            </p>\n            <p>\n                <Link to=\"/settings\">\n                    <button className=\"btn-wide\">{dictionary.settings}</button>\n                </Link>\n            </p>\n            <p>\n                <LanguagePicker />\n            </p>\n        </>\n    );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { LanguageContext } from '../../contexts/Language';\nimport { SettingsContext, HINT_ALTERNATIVES, Hints } from '../../contexts/Settings';\nimport './SettingsMenu.css'\n\nexport function SettingsMenu() {\n    const { dictionary } = useContext(LanguageContext);\n    const { hints, setHints } = useContext(SettingsContext);\n\n    return (\n        <>\n            <h2>\n                {dictionary.settings}\n            </h2>\n            <h3>\n                {dictionary.hintsLabel}\n            </h3>\n            <p className=\"btn-row\">\n                {HINT_ALTERNATIVES.map(h => (\n                    <button className={hints === h ? 'active' : ''} onClick={() => setHints(h)}>\n                        {dictionary[`hints: ${h}`] || '???'}\n                    </button>\n                ))}\n            </p>\n            <p>\n                <Link to=\"/\">\n                    <button className=\"btn-wide\">{dictionary.goBack}</button>\n                </Link>\n            </p>\n        </>\n    );\n}\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport BoardHolder from './components/game/BoardHolder';\nimport { LanguageProvider } from './contexts/Language';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport MainMenu from './components/MainMenu';\nimport { SettingsProvider } from './contexts/Settings';\nimport { SettingsMenu } from './components/settings/SettingsMenu';\n\nfunction App() {\n    return (\n        <Router>\n            <SettingsProvider>\n                <LanguageProvider>\n                    <div className=\"App\">\n                        <Header />\n                        <main>\n                            <Switch>\n                                <Route exact path=\"/\">\n                                    <MainMenu />\n                                </Route>\n                                <Route exact path=\"/settings\">\n                                    <SettingsMenu />\n                                </Route>\n                                <Route path=\"/board/:id\">\n                                    <BoardHolder />\n                                </Route>\n                                <Route>\n                                    <h2>404 Not Found</h2>\n                                </Route>\n                            </Switch>\n                        </main>\n                        <Footer />\n                    </div>\n                </LanguageProvider>\n            </SettingsProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './globals.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}